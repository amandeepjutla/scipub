},
rep(numvars, length(factortwo)),
rep(factortwo, each = length(numvars))
)
tmat <- matrix(paste(tmpt, ifelse(tmpp < .001,
"***",
ifelse(tmpp < .01,
"**",
ifelse(tmpp < .05,
"*",
""
)
)
), sep = ""),
ncol = length(numvars), nrow = length(factortwo)
)
mergetmat <- as.data.frame(tmat,
row.names = factortwo, stringsAsFactors = FALSE
)
colnames(mergetmat) <- numvars
mergemat[factortwo, numvars] <- mergetmat[factortwo, numvars]
mergemat[numvars, factortwo] <- t(mergetmat[factortwo, numvars])
}
# if 3+ level factors - do aov
if (!is.null(factormore) & !is.null(numvars)) {
fmat <- mapply(
function(n, f) {
paste0(
"F=",
format(
round(summary(stats::aov(get(n) ~ get(f),
data = orig,
na.action = na.omit
))[[1]]$"F value"[1], round_n),
round_n
)
)
},
rep(numvars, length(factormore)),
rep(factormore, each = length(numvars))
)
fmatp <- mapply(
function(n, f) {
summary(stats::aov(get(n) ~ get(f), data = orig))[[1]]$"Pr(>F)"[1]
},
rep(numvars, length(factormore)),
rep(factormore, each = length(numvars))
)
fmat <- matrix(paste(fmat, ifelse(fmatp < .001,
"***",
ifelse(fmatp < .01,
"**",
ifelse(fmatp < .05,
"*",
""
)
)
), sep = ""),
ncol = length(numvars), nrow = length(factormore)
)
mergefmat <- as.data.frame(fmat,
row.names = factormore, stringsAsFactors = FALSE
)
colnames(mergefmat) <- numvars
mergemat[factormore, numvars] <- mergefmat[factormore, numvars]
mergemat[numvars, factormore] <- t(mergefmat[factormore, numvars])
}
# if more than one factor var, test chi2
if (length(factorvars) > 1) {
chix <- mapply(
function(n1, n2) {
paste0(
"\u03C7", "2=",
format(round(stats::chisq.test(
orig[[n1]],
orig[[n2]]
)$statistic, round_n), round_n)
)
},
rep(factorvars, length(factorvars)),
rep(factorvars, each = length(factorvars))
)
chip <- mapply(
function(n1, n2) {
stats::chisq.test(orig[[n1]], orig[[n2]])$p.value
},
rep(factorvars, length(factorvars)),
rep(factorvars, each = length(factorvars))
)
chix <- matrix(paste(chix, ifelse(chip < .001,
"***",
ifelse(chip < .01,
"**",
ifelse(chip < .05,
"*",
""
)
)
), sep = ""),
ncol = length(factorvars), nrow = length(factorvars)
)
mergechi <- as.data.frame(chix,
row.names = factorvars, stringsAsFactors = FALSE
)
colnames(mergechi) <- factorvars
mergemat[factorvars, factorvars] <- mergechi
}
# convert back to matrix
rmat <- as.matrix(mergemat)
}
# remove diagonal
diag(rmat) <- "-"
# if vars2 supplied - override other...
if (!is.null(vars2)) {
colnum <- FALSE
cutempty <- FALSE
tri <- "all"
}
# rename
if (colnum[1]) {
rownames(rmat) <- paste(seq_len(length(varsall)), var_namesall, sep = ". ")
colnames(rmat) <- seq_len(length(varsall))
} else {
rownames(rmat) <- var_namesall
colnames(rmat) <- var_namesall
}
## pick upper/lower triangle of correlation matrix to keep
if (tri[1] == "upper") {
rmat[lower.tri(rmat, diag = TRUE)] <- ""
# & !colnum[1]
if (cutempty[1]) {
rmat <- rmat[-NROW(rmat), 2:ncol(rmat)]
}
}
if (tri[1] == "lower") {
rmat[upper.tri(rmat, diag = TRUE)] <- ""
if (cutempty[1]) {
rmat <- rmat[-1, -NCOL(rmat)]
}
}
# if vars2 supplied - cut to cross-correl
if (!is.null(vars2)) {
rmat <- rmat[seq_len(length(vars)), (length(vars) + 1):length(varsall)]
}
missing_n <- data %>%
dplyr::select(tidyselect::all_of(varsall)) %>%
purrr::set_names(var_namesall) %>%
dplyr::mutate_all(is.na) %>%
dplyr::summarise_all(sum) %>%
dplyr::select_if(function(sum) sum > 0)
missingness <- ifelse(ncol(missing_n) > 0,
paste0(stringr::str_c(
"N=", missing_n,
" missing ", colnames(missing_n), ". "
), collapse = ""),
""
)
caption <- paste0(
"Note. This table presents ",
stringr::str_to_title(method[1]), " correlation coefficients with ",
ifelse(stringr::str_detect(use[1], "complete"),
paste0(
"list-wise deletion (N=",
NROW(x), ifelse(miss > 0,
paste0(", missing ", miss, " cases"), ""
), ")"
),
paste0("pairwise deletion. ", missingness)
),
ifelse(is.null(factorvars),
"",
paste0(" Group differences for continuous and categorical
variables are indicated by t-statistic/ANOVA F
and chi-squared, respectively.")
),
" * p<.05, ** p<.01, *** p<.001"
)
# check if htmlTable installed
if (html[1] == TRUE & !requireNamespace("htmlTable", quietly = TRUE)) {
warning("library(htmlTable) is needed for HTML format output,
please install and try again")
html <- FALSE
}
if (html[1] == TRUE) {
return(print(htmlTable::htmlTable(rmat,
useViewer = TRUE, caption = caption, pos.caption = "bottom"
)))
} else {
return(list(table = noquote(rmat), caption = caption))
}
}
data(psydat)
data = psydat
str(psydat)
x = "Sex"
y = "depressT"
g <- ggplot(data=data[!is.na(data$x) | !is.na(data$y),], aes(x=x,y=y,color=x,fill=x, shape=x)) +
geom_half_violin(position = position_nudge(x = .3, y = 0), alpha = .8, width = .5, side="r", color=NA) +
geom_point(position = position_jitterdodge(jitter.width = .5), alpha=.8, size = 1.5) +
geom_boxplot(outlier.alpha = 0, width=.5, fill = NA, color="black") + theme(legend.position = "none") +
stat_summary(fun=mean, geom="line", color="darkgray", size=1, aes(group=1)) +
stat_summary(fun=mean, geom="point", color="darkgray", size=2, shape=16, aes(group=1)) +
xlab("") + ylab("")
library(ggplot2)
g <- ggplot(data=data[!is.na(data$x) | !is.na(data$y),], aes(x=x,y=y,color=x,fill=x, shape=x)) +
geom_half_violin(position = position_nudge(x = .3, y = 0), alpha = .8, width = .5, side="r", color=NA) +
geom_point(position = position_jitterdodge(jitter.width = .5), alpha=.8, size = 1.5) +
geom_boxplot(outlier.alpha = 0, width=.5, fill = NA, color="black") + theme(legend.position = "none") +
stat_summary(fun=mean, geom="line", color="darkgray", size=1, aes(group=1)) +
stat_summary(fun=mean, geom="point", color="darkgray", size=2, shape=16, aes(group=1)) +
xlab("") + ylab("")
library(gghalves)
ggplot(data=data[!is.na(data$x) | !is.na(data$y),], aes(x=x,y=y,color=x,fill=x, shape=x)) +
geom_half_violin(position = position_nudge(x = .3, y = 0), alpha = .8, width = .5, side="r", color=NA) +
geom_point(position = position_jitterdodge(jitter.width = .5), alpha=.8, size = 1.5) +
geom_boxplot(outlier.alpha = 0, width=.5, fill = NA, color="black") + theme(legend.position = "none") +
stat_summary(fun=mean, geom="line", color="darkgray", size=1, aes(group=1)) +
stat_summary(fun=mean, geom="point", color="darkgray", size=2, shape=16, aes(group=1)) +
xlab("") + ylab("")
ggplot(data=data[!is.na(data$x) | !is.na(data$y),], aes(x=as.numeric(x),y=y,color=x,fill=x, shape=x)) +
geom_half_violin(position = position_nudge(x = .3, y = 0), alpha = .8, width = .5, side="r", color=NA) +
geom_point(position = position_jitterdodge(jitter.width = .5), alpha=.8, size = 1.5) +
geom_boxplot(outlier.alpha = 0, width=.5, fill = NA, color="black") + theme(legend.position = "none") +
stat_summary(fun=mean, geom="line", color="darkgray", size=1, aes(group=1)) +
stat_summary(fun=mean, geom="point", color="darkgray", size=2, shape=16, aes(group=1)) +
xlab("") + ylab("")
ggplot(data=data[!is.na(data$x) | !is.na(data$y),], aes(x=x,y=as.numeric(y),color=x,fill=x, shape=x)) +
geom_half_violin(position = position_nudge(x = .3, y = 0), alpha = .8, width = .5, side="r", color=NA) +
geom_point(position = position_jitterdodge(jitter.width = .5), alpha=.8, size = 1.5) +
geom_boxplot(outlier.alpha = 0, width=.5, fill = NA, color="black") + theme(legend.position = "none") +
stat_summary(fun=mean, geom="line", color="darkgray", size=1, aes(group=1)) +
stat_summary(fun=mean, geom="point", color="darkgray", size=2, shape=16, aes(group=1)) +
xlab("") + ylab("")
data[!is.na(data$x) | !is.na(data$y),]
data[!is.na(data$x) & !is.na(data$y),]
x
y
data$x
data[,c(x,y)]
summary(data[,c(x,y)])
summary(!ia.na(data[,c(x,y)])
)
summary(!is.na(data[,c(x,y)]))
ggplot(data=data[!is.na(data[,x]) & !is.na(data[,y]),], aes(x=x,y=as.numeric(y),color=x,fill=x, shape=x)) +
geom_half_violin(position = position_nudge(x = .3, y = 0), alpha = .8, width = .5, side="r", color=NA) +
geom_point(position = position_jitterdodge(jitter.width = .5), alpha=.8, size = 1.5) +
geom_boxplot(outlier.alpha = 0, width=.5, fill = NA, color="black") + theme(legend.position = "none") +
stat_summary(fun=mean, geom="line", color="darkgray", size=1, aes(group=1)) +
stat_summary(fun=mean, geom="point", color="darkgray", size=2, shape=16, aes(group=1)) +
xlab("") + ylab("")
data[!is.na(data[,x]) & !is.na(data[,y]),]
ggplot(data=data[!is.na(data[,x]) & !is.na(data[,y]),], aes(x=x,y=y,color=x,fill=x, shape=x)) +
geom_half_violin(position = position_nudge(x = .3, y = 0), alpha = .8, width = .5, side="r", color=NA) +
geom_point(position = position_jitterdodge(jitter.width = .5), alpha=.8, size = 1.5) +
geom_boxplot(outlier.alpha = 0, width=.5, fill = NA, color="black") + theme(legend.position = "none") +
stat_summary(fun=mean, geom="line", color="darkgray", size=1, aes(group=1)) +
stat_summary(fun=mean, geom="point", color="darkgray", size=2, shape=16, aes(group=1)) +
xlab("") + ylab("")
data[,x] <- as.factor(data[,x])
data[,y] <- as.numeric(as.character((data[,y])))
ggplot(data=data[!is.na(data[,x]) & !is.na(data[,y]),], aes(x=x,y=y,color=x,fill=x, shape=x)) +
geom_half_violin(position = position_nudge(x = .3, y = 0), alpha = .8, width = .5, side="r", color=NA) +
geom_point(position = position_jitterdodge(jitter.width = .5), alpha=.8, size = 1.5) +
geom_boxplot(outlier.alpha = 0, width=.5, fill = NA, color="black") + theme(legend.position = "none") +
stat_summary(fun=mean, geom="line", color="darkgray", size=1, aes(group=1)) +
stat_summary(fun=mean, geom="point", color="darkgray", size=2, shape=16, aes(group=1)) +
xlab("") + ylab("")
get(x)
ggplot(data=data[!is.na(data[,x]) & !is.na(data[,y]),], aes(x=get(x),y=get(y),color=get(x),fill=get(x), shape=get(x))) +
geom_half_violin(position = position_nudge(x = .3, y = 0), alpha = .8, width = .5, side="r", color=NA) +
geom_point(position = position_jitterdodge(jitter.width = .5), alpha=.8, size = 1.5) +
geom_boxplot(outlier.alpha = 0, width=.5, fill = NA, color="black") + theme(legend.position = "none") +
stat_summary(fun=mean, geom="line", color="darkgray", size=1, aes(group=1)) +
stat_summary(fun=mean, geom="point", color="darkgray", size=2, shape=16, aes(group=1)) +
xlab("") + ylab("")
ggplot(data=data[!is.na(data[,x]) & !is.na(data[,y]),], aes(x=get(x),y=get(y),color=get(x),fill=get(x), shape=get(x))) +
geom_half_violin(position = position_nudge(x = .3, y = 0), alpha = .8, width = .5, side="r", color=NA) +
geom_point(position = position_jitterdodge(jitter.width = .5), alpha=.8, size = 1.5) +
geom_boxplot(outlier.alpha = 0, width=.5, fill = NA, color="black") + theme(legend.position = "none") +
stat_summary(fun=mean, geom="line", color="darkgray", size=1, aes(group=1)) +
stat_summary(fun=mean, geom="point", color="darkgray", size=2, shape=16, aes(group=1)) +
xlab("") + ylab("") +
theme_bw(base_size = 12,base_family = "Arial") +
theme(panel.grid.minor = element_line(linetype = "dashed",size=.5),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"))
library(ggplot2)
library(gghalves)
ggplot(data=data[!is.na(data[,x]) & !is.na(data[,y]),], aes(x=get(x),y=get(y),color=get(x),fill=get(x), shape=get(x))) +
geom_half_violin(position = position_nudge(x = .3, y = 0), alpha = .8, width = .5, side="r", color=NA) +
geom_point(position = position_jitterdodge(jitter.width = .5), alpha=.8, size = 1.5) +
geom_boxplot(outlier.alpha = 0, width=.5, fill = NA, color="black") + theme(legend.position = "none") +
stat_summary(fun=mean, geom="line", color="darkgray", size=1, aes(group=1)) +
stat_summary(fun=mean, geom="point", color="darkgray", size=2, shape=16, aes(group=1)) +
xlab("") + ylab("") +
theme_bw(base_size = 12,base_family = "Arial") +
theme(panel.grid.minor = element_line(linetype = "dashed",size=.5),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"))
data=psydat
x="Sex"
y="iq"
data[,x] <- as.factor(data[,x])
data[,y] <- as.numeric(as.character((data[,y])))
ggplot(data=data[!is.na(data[,x]) & !is.na(data[,y]),], aes(x=get(x),y=get(y),color=get(x),fill=get(x), shape=get(x))) +
geom_half_violin(position = position_nudge(x = .3, y = 0), alpha = .8, width = .5, side="r", color=NA) +
geom_point(position = position_jitterdodge(jitter.width = .5), alpha=.8, size = 1.5) +
geom_boxplot(outlier.alpha = 0, width=.5, fill = NA, color="black") + theme(legend.position = "none") +
stat_summary(fun=mean, geom="line", color="darkgray", size=1, aes(group=1)) +
stat_summary(fun=mean, geom="point", color="darkgray", size=2, shape=16, aes(group=1)) +
xlab("") + ylab("") +
theme_bw(base_size = 12,base_family = "Arial") +
theme(panel.grid.minor = element_line(linetype = "dashed",size=.5),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"))
x
y
data[,x] <- as.factor(data[,x])
x
data[,x]
data
data<-psydat
data<-data(psydat)
data[,x] <- as.factor(data[,x])
data[,y] <- as.numeric(as.character((data[,y])))
ggplot(data=data[!is.na(data[,x]) & !is.na(data[,y]),], aes(x=get(x),y=get(y),color=get(x),fill=get(x), shape=get(x))) +
geom_half_violin(position = position_nudge(x = .3, y = 0), alpha = .8, width = .5, side="r", color=NA) +
geom_point(position = position_jitterdodge(jitter.width = .5), alpha=.8, size = 1.5) +
geom_boxplot(outlier.alpha = 0, width=.5, fill = NA, color="black") + theme(legend.position = "none") +
stat_summary(fun=mean, geom="line", color="darkgray", size=1, aes(group=1)) +
stat_summary(fun=mean, geom="point", color="darkgray", size=2, shape=16, aes(group=1)) +
xlab("") + ylab("") +
theme_bw(base_size = 12,base_family = "Arial") +
theme(panel.grid.minor = element_line(linetype = "dashed",size=.5),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"))
data[,x] <- as.factor(data[,x])
data[,x]
data
data(psydat)
library(scipub)
data(psydat)
data<-psydat
data[,x] <- as.factor(data[,x])
data[,y] <- as.numeric(as.character((data[,y])))
ggplot(data=data[!is.na(data[,x]) & !is.na(data[,y]),], aes(x=get(x),y=get(y),color=get(x),fill=get(x), shape=get(x))) +
geom_half_violin(position = position_nudge(x = .3, y = 0), alpha = .8, width = .5, side="r", color=NA) +
geom_point(position = position_jitterdodge(jitter.width = .5), alpha=.8, size = 1.5) +
geom_boxplot(outlier.alpha = 0, width=.5, fill = NA, color="black") + theme(legend.position = "none") +
stat_summary(fun=mean, geom="line", color="darkgray", size=1, aes(group=1)) +
stat_summary(fun=mean, geom="point", color="darkgray", size=2, shape=16, aes(group=1)) +
xlab("") + ylab("") +
theme_bw(base_size = 12,base_family = "Arial") +
theme(panel.grid.minor = element_line(linetype = "dashed",size=.5),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"))
ggplot(data=data[!is.na(data[,x]) & !is.na(data[,y]),], aes(x=get(x),y=get(y),color=get(x),fill=get(x), shape=get(x))) +
geom_half_violin(position = position_nudge(x = .3, y = 0), alpha = .8, width = .5, side="r", color=NA) +
geom_point(position = position_jitterdodge(jitter.width = .5), alpha=.8, size = 1.5) +
geom_boxplot(outlier.alpha = 0, width=.5, fill = NA, color="black") +
stat_summary(fun=mean, geom="line", color="darkgray", size=1, aes(group=1)) +
stat_summary(fun=mean, geom="point", color="darkgray", size=2, shape=16, aes(group=1)) +
xlab("") + ylab("") +
theme_bw(base_size = 12,base_family = "Arial") +
theme(legend.position = "none",
panel.grid.minor = element_line(linetype = "dashed",size=.5),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"))
g <- ggplot(data=data[!is.na(data[,x]) & !is.na(data[,y]),], aes(x=get(x),y=get(y),color=get(x),fill=get(x), shape=get(x))) +
geom_half_violin(position = position_nudge(x = .3, y = 0), alpha = .8, width = .5, side="r", color=NA) +
geom_point(position = position_jitterdodge(jitter.width = .5), alpha=.8, size = 1.5) +
geom_boxplot(outlier.alpha = 0, width=.5, fill = NA, color="black") +
stat_summary(fun=mean, geom="line", color="darkgray", size=1, aes(group=1)) +
stat_summary(fun=mean, geom="point", color="darkgray", size=2, shape=16, aes(group=1)) +
xlab("") + ylab("") +
theme_bw(base_size = 12,base_family = "Arial") +
theme(legend.position = "none",
panel.grid.minor = element_line(linetype = "dashed",size=.5),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"))
g
g + xlab("mew")
ggplot(data=data[!is.na(data[,x]) & !is.na(data[,y]),], aes(x=get(x),y=get(y),color=get(x),fill=get(x), shape=get(x))) +
geom_half_violin(position = position_nudge(x = .3, y = 0), alpha = .8, width = .5, side="r", color=NA) +
geom_point(position = position_jitterdodge(jitter.width = .5), alpha=.8, size = 1.5) +
geom_boxplot(outlier.alpha = 0, width=.5, fill = NA, color="black") +
stat_summary(fun=mean, geom="line", color="darkgray", size=1, aes(group=1)) +
stat_summary(fun=mean, geom="point", color="darkgray", size=2, shape=16, aes(group=1)) +
xlab("") + ylab("") +
theme_bw(base_size = 12,base_family = "Arial") +
theme(legend.position = "none",
panel.grid.minor = element_line(linetype = "dashed",size=.5),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold")) +
scale_shape(solid = FALSE)
meanline = c(TRUE, FALSE)
g <- ggplot(data=data[!is.na(data[,x]) & !is.na(data[,y]),], aes(x=get(x),y=get(y),color=get(x),fill=get(x), shape=get(x))) +
geom_half_violin(position = position_nudge(x = .3, y = 0), alpha = .8, width = .5, side="r", color=NA) +
geom_point(position = position_jitterdodge(jitter.width = .5), alpha=.8, size = 1.5) +
geom_boxplot(outlier.alpha = 0, width=.5, fill = NA, color="black") +
df
g <- ggplot(data=data[!is.na(data[,x]) & !is.na(data[,y]),], aes(x=get(x),y=get(y),color=get(x),fill=get(x), shape=get(x))) +
geom_half_violin(position = position_nudge(x = .3, y = 0), alpha = .8, width = .5, side="r", color=NA) +
geom_point(position = position_jitterdodge(jitter.width = .5), alpha=.8, size = 1.5) +
geom_boxplot(outlier.alpha = 0, width=.5, fill = NA, color="black") +
xlab("") + ylab("") +
theme_bw(base_size = 12,base_family = "Arial") +
theme(legend.position = "none",
panel.grid.minor = element_line(linetype = "dashed",size=.5),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold")) +
scale_shape(solid = FALSE)
g + stat_summary(fun=mean, geom="line", color="darkgray", size=1, aes(group=1)) +
stat_summary(fun=mean, geom="point", color="darkgray", size=2, shape=16, aes(group=1)) +
return(g)
g + stat_summary(fun=mean, geom="line", color="darkgray", size=1, aes(group=1)) +
stat_summary(fun=mean, geom="point", color="darkgray", size=2, shape=16, aes(group=1))
g <- ggplot(data=data[!is.na(data[,x]) & !is.na(data[,y]),], aes(x=get(x),y=get(y),color=get(x),fill=get(x), shape=get(x))) +
geom_half_violin(position = position_nudge(x = .3, y = 0), alpha = .8, width = .5, side="r", color=NA) +
geom_point(position = position_jitterdodge(jitter.width = .5), alpha=.8, size = 1.5) +
geom_boxplot(outlier.alpha = 0, width=.5, fill = NA, color="black") +
xlab("") + ylab("") +
theme_bw(base_size = 12,base_family = "Arial") +
theme(legend.position = "none",
panel.grid.minor = element_line(linetype = "dashed",size=.5),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold")) +
scale_shape(solid = FALSE)
g
psydat$Income
gg_groupplot <- function(data, x = NULL, y = NULL,
meanline = c(TRUE, FALSE)) {
if (is.null(x)) {
stop("please delay x variable", call. = FALSE)
}
if (is.null(y)) {
stop("please delay y variable", call. = FALSE)
}
data[,x] <- as.factor(data[,x])
data[,y] <- as.numeric(as.character((data[,y])))
g <- ggplot(data=data[!is.na(data[,x]) & !is.na(data[,y]),], aes(x=get(x),y=get(y),color=get(x),fill=get(x), shape=get(x))) +
geom_half_violin(position = position_nudge(x = .3, y = 0), alpha = .8, width = .5, side="r", color=NA) +
geom_point(position = position_jitterdodge(jitter.width = .5), alpha=.8, size = 1.5) +
geom_boxplot(outlier.alpha = 0, width=.5, fill = NA, color="black") +
xlab("") + ylab("") +
theme_bw(base_size = 12,base_family = "Arial") +
theme(legend.position = "none",
panel.grid.minor = element_line(linetype = "dashed",size=.5),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold")) +
scale_shape(solid = FALSE)
if (meanline[1]) {
g + stat_summary(fun=mean, geom="line", color="darkgray", size=1, aes(group=1)) +
stat_summary(fun=mean, geom="point", color="darkgray", size=2, shape=16, aes(group=1))
}
return(g)
}
gg_groupplot(data = psydat, x = "Income", y = "depressT", meanline =TRUE) + facet_wrap(~Sex)
gg_groupplot <- function(data, x = NULL, y = NULL,
meanline = c(TRUE, FALSE)) {
if (is.null(x)) {
stop("please delay x variable", call. = FALSE)
}
if (is.null(y)) {
stop("please delay y variable", call. = FALSE)
}
data[,x] <- as.factor(data[,x])
data[,y] <- as.numeric(as.character((data[,y])))
g <- ggplot(data=data[!is.na(data[,x]) & !is.na(data[,y]),], aes(x=get(x),y=get(y),color=get(x),fill=get(x), shape=get(x))) +
geom_half_violin(position = position_nudge(x = .3, y = 0), alpha = .8, width = .5, side="r", color=NA) +
geom_point(position = position_jitterdodge(jitter.width = .5), alpha=.8, size = 1.5) +
geom_boxplot(outlier.alpha = 0, width=.5, fill = NA, color="black") +
xlab("") + ylab("") +
theme_bw(base_size = 12,base_family = "Arial") +
theme(legend.position = "none",
panel.grid.minor = element_line(linetype = "dashed",size=.5),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold")) +
scale_shape(solid = FALSE)
if (meanline[1]) {
g <- g + stat_summary(fun=mean, geom="line", color="darkgray", size=1, aes(group=1)) +
stat_summary(fun=mean, geom="point", color="darkgray", size=2, shape=16, aes(group=1))
}
return(g)
}
gg_groupplot(data = psydat, x = "Income", y = "depressT", meanline = TRUE) + facet_wrap(~Sex)
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
library(devtools)
library(roxygen2)
#setwd("/Users/David/Dropbox (Personal)")
#create("scipub")
setwd("/Users/David/Dropbox (Personal)/scipub")
lintr::lint("/Users/David/Dropbox (Personal)/scipub/R/gg_groupplot.R")
devtools::build_vignettes()
devtools::check(document = T,cran = F, vignettes = T)
devtools::check(document = T,cran = F, vignettes = T)
devtools::check(document = T,cran = F, vignettes = T)
devtools::check(document = T,cran = F, vignettes = F)
devtools::check(document = T,cran = F, vignettes = F)
#usethis::use_pkgdown()
pkgdown::build_site(preview = T)
pkgdown::build_site()
usethis::use_github_action("pkgdown")
usethis::use_build_ignore(c("_config.yml" ,"scipub.pdf" ,"scipub_1.2.0.tar.gz"))
devtools::build()
devtools::install()
devtools::check()
* added new gg_grouplot function
